name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: --memory=1g --cpus=1

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: 'False'
      ALLOWED_HOSTS: 'localhost,127.0.0.1'
      EMAIL_BACKEND: 'django.core.mail.backends.smtp.EmailBackend'
      EMAIL_HOST: 'smtp.sendgrid.net'
      EMAIL_PORT: 587
      EMAIL_USE_TLS: 'True'
      EMAIL_HOST_USER: 'apikey'
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: 'localhost'  # Changed from 'database' to 'localhost' or 'postgres'
      POSTGRES_PORT: 5432
      TIME_ZONE: 'UTC'
      CSRF_TRUSTED_ORIGINS: 'http://localhost,http://127.0.0.1'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r docker/requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER; do
            echo "Waiting for PostgreSQL to be ready...";
            sleep 3;
          done

      - name: Print PostgreSQL logs
        run: docker logs $(docker ps -q --filter "ancestor=postgres:13")

      - name: Run tests
        run: |
          source venv/bin/activate
          python manage.py test
        timeout-minutes: 5
